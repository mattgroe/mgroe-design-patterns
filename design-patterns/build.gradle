

//buildScan { termsOfServiceUrl = "https://gradle.com/terms-of-service"; termsOfServiceAgree = "yes" }

buildscript {
    repositories {
        jcenter()
        maven {
      		url "https://plugins.gradle.org/m2/"
    	}
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        classpath "gradle.plugin.com.bulwinkel.gradle:git-version:0.3.1"
    }
}

plugins {
	id "com.github.spotbugs" version "1.6.11"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'java-library'
//apply plugin: 'checkstyle'

mainClassName = 'main.java.assignment5.Main'

compileJava.options.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

jar {
    manifest {
        attributes "Main-Class": "main/java/assignment5/Main",
        'Implementation-Title': 'Gradle'
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

/////////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////////
//checkstyle {
//    // Keep checkstyle a little quieter
//    ignoreFailures = true
//    showViolations = false
//  }
//
//  tasks.withType(Checkstyle) {
//    reports {
//      html.enabled = true
//      xml.enabled = false
//    }
//  }
//  checkstyle {
//      toolVersion = "8.8"
//  }



///////////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////////

spotbugs {
	toolVersion = '3.1.12'
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
    	xml.enabled = false
    	html.enabled = true
	}
}
